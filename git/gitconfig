# A good list of aliases http://haacked.com/archive/2014/07/28/github-flow-aliases/
[alias]
        # Branch
        br = branch
        branch-name = rev-parse --abbrev-ref HEAD
        branch-diff = diff master...HEAD
        branch-files = "!git diff master...HEAD --name-status | sed '/^D/d ; s/^.\\s\\+//'"

        # Commit
        c = commit
        cne = commit --no-edit

        # Clone
        cl = clone
        sclone = clone --depth=1

        # Diff
        d = diff --color-words
        dc = diff --cached
        df = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

        # Merge
        m = merge

        # Pull
        plom = pull origin master
        plum = pull upstream master
        preb = !git fetch upstream && git rebase upstream/master

        # Push
        p = push
        pom = push origin master
        poh = push origin head

        # Stash
        st = stash
        stp = stash pop

        # Status/Logging
        hist = log --graph --pretty=custom           # Show custom graph
        ll = log --stat --abbrev-commit
        lc = shortlog --summary --numbered           # List contributors

        # Reset
        unstage = reset HEAD --                      # Mixed reset (affects HEAD and Index)

        # Submodules
        subpl = submodule update --init --recursive

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  # Find commits by source code

  cc = "!f() { \
      git log --pretty=custom --decorate --date=short -S\"$1\"; \
  }; f"

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  # Find commits by commit message

  cm = "!f() { \
      git log --pretty=custom --decorate --date=short --grep=\"$1\"; \
  }; f"

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  # Credit an author on the latest commit

  credit = "!f() { \
      if [ -n \"$1\" ] && [ -n \"$2\" ]; then \
          git commit --amend --author \"$1 <$2>\" -C HEAD; \
      fi \
  }; f"

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  # List remote branches

  lrb = "!f() { \
      remote="${1:-origin}"; \
      git ls-remote --heads "$remote"; \
  }; f"

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  # Remove the tag with the specified tag name if
  # exists and tag the latest commit with that name

  retag = "!f() { \
      git tag -d "$1" &> /dev/null; \
      git tag $1; \
  }; f"

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# So much color
[color]
        ui = auto

[color "branch"]
        current = green bold
        local = green
        remote = yellow

[color "diff"]
        frag = magenta
        meta = yellow
        new = green
        old = red

[color "diff-highlight"]
        oldNormal = red bold
        oldHighlight = "red bold 52"
        newNormal = "green bold"
        newHighlight = "green bold 22"

[color "status"]
        added = green reverse
        changed = yellow reverse
        untracked = red reverse

# Git mergetool
[merge]
	conflictStyle = zdiff3

[core]
        editor = nvim
        attributesfile = ~/.gitattributes
        excludesfile = ~/.gitignore
        autocrlf = input
        mergeoptions = --no-edit
        ignorecase = false
	pager = delta

[diff "bin"]
        # Use `hexdump` to diff binary files
        textconv = hexdump -v -C

[pretty]
        custom = "%C(magenta)%h%C(red)%d %C(yellow)%ar %C(green)%s %C(yellow)(%an)"
        #                     │        │            │            │             └─ author name
        #                     │        │            │            └─ message
        #                     │        │            └─ date (relative)
        #                     │        └─ decorations (branch, heads or tags)
        #                     └─ hash (abbreviated)

[help]
        # Correct typos
        autocorrect = 7

# Push easily http://stackoverflow.com/a/23918418/89484
[push]
        # Make `git push` automatically push relevant
        # annotated tags when pushing branches out
        followTags = true
        default = current
        autoSetupRemote = true

# Use separate file for username / github token / etc
[include]
        path = ~/.gitconfig.local

[filter "lfs"]
        clean = git-lfs clean -- %f
        smudge = git-lfs smudge -- %f
        required = true
        process = git-lfs filter-process

[fetch]
        prune = true

[diff "x509"]
        textconv = openssl x509 -text -noout -in
[pull]
	ff = only
[advice]
	detachedHead = false
[interactive]
	diffFilter = delta --color-only
[delta]
	navigate = true
