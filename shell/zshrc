# ---------------------------------------------------------
# Oh My Zsh
# ---------------------------------------------------------
# Path to your oh-my-zsh configuration.
export ZSH=$HOME/.oh-my-zsh

# -------------------------------------
# Theme
# -------------------------------------
# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="powerlevel9k/powerlevel9k"
DEFAULT_USER="stek"

# ----------------------
# powerlevel9k config
# ----------------------
# Multiline prompt
POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=""
POWERLEVEL9K_MULTILINE_SECOND_PROMPT_PREFIX="=> "
#  Newline Before prompt
POWERLEVEL9K_PROMPT_ADD_NEWLINE=true
# Vi Mode config
POWERLEVEL9K_VI_INSERT_MODE_STRING=""
POWERLEVEL9K_VI_COMMAND_MODE_STRING="\u2318"
# Prompt configuration
#  status -- exit code, dir -- pwd
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(status dir vcs)
#  time -- current time
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(vi_mode command_execution_time root_indicator background_jobs time)

# -------------------------------------
# General OMZ configuration
# -------------------------------------
# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"
# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"
# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13
# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"
# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"
# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"
# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"
# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=$HOME/dotfiles/zsh

# -------------------------------------
# OMZ Plugins
# -------------------------------------
# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(
  git
#  history
#  fabric
  history-substring-search
  vi-mode
  zsh-syntax-highlighting
)

# ---------------------------------------------------------
# Release The Kraken!
# ---------------------------------------------------------
source $ZSH/oh-my-zsh.sh

# ---------------------------------------------------------
# Path rewrite, SLOOOOOOOOOOOOOOOOOW, so commented out
# ---------------------------------------------------------
# ------------ needed later ------------
brew_prefix="$(brew --prefix)"

#3# Directories to be prepended to $PATH
#3declare -a dirs_to_prepend
#3dirs_to_prepend=(
#3  "/usr/bin"
#3  "/usr/local/sbin"
#3  "/usr/local/git/bin"
#3  "/usr/local/"
#3  "$HOME/dotfiles/bin"
#3  "$HOME/bin"
#3  "$(brew --prefix ruby)/bin"
#3  "$(brew --prefix coreutils)/libexec/gnubin" # Add brew-installed GNU core utilities bin
#3  "$(brew --prefix)/share/npm/bin" # Add npm-installed package bin
#3)
#3
#3# Explicitly configured $PATH
#3PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
#3
#3for dir in ${dirs_to_prepend[@]}
#3do
#3  if [ -d ${dir} ]; then
#3    # If these directories exist, then prepend them to existing PATH
#3    PATH="${dir}:$PATH"
#3  fi
#3done
#3
#3unset dirs_to_prepend
#3
#3export PATH
#3

# ---------------------------------------------------------
# Completions
# ---------------------------------------------------------

# http://stackoverflow.com/a/27853970/5279817
autoload -U +X compinit && compinit
autoload -U +X bashcompinit && bashcompinit

if [ -f "$brew_prefix/etc/bash_completion" ]; then
  . "$brew_prefix/etc/bash_completion"
fi
if [ -d "$brew_prefix/etc/bash_completion.d" ]; then
  for comp in "$brew_prefix/etc/bash_completion.d/"*; do
    if ! [[ "$comp" =~ "(git|brew)" ]]; then
      . "$comp"
    fi
  done
  unset comp
fi
unset brew_prefix

# ---------------------------------------------------------
# Common Shell Dotfiles
# ---------------------------------------------------------
for file in $HOME/.shell_{exports,aliases,functions,config}; do
  [ -r "$file" ] && [ -f "$file" ] && source "$file";
done;
unset file;
# ---------------------------------------------------------
# Local zshrc
# ---------------------------------------------------------
[ -f ~/.zsh.local ] && source ~/.zsh.local
